import { POINT, RECT } from "soui4/Basic";
import { IEvtArgs,IEvtSlot } from "soui4/IEvt";
import { IObject } from "soui4/IObject";
import { IAnimation } from "soui4/IAnimation";
import { COLORREF, ISwndContainer } from "soui4/Typedef";
import { SStringA } from "soui4/SString";

export class IWindow extends IObject{
    SetToolTipText(str:string):void;
    IsChecked():boolean;
    SetCheck(flag:boolean):void;
    IsDisabled():boolean;
    EnableWindow(flag:boolean):void;
    IsVisible(checkParent:boolean):boolean;
    SetVisible(visible:boolean,update:boolean):void;
    GetUserData():number;
    SetUserData(uData:number):void;
    DoColorize(cr:COLORREF):void;
    SDispatchMessage(msg:number,wp:number,lp:number):void;
    IsFocusable():boolean;
    IsFocused():boolean;
    SetFocus():void;
    KillFocus():void;
    Invalidate():void;
    InvalidateRect(rc:RECT):void;
    LockUpdate():void;
    UnlockUpdate():void;
    IsUpdateLocked():boolean;
    Update():void;
    Move(rc:RECT):void;
    Move2(x:number,y:number,cx:number,cy:number):void;
    GetWindowRect():RECT;
    GetClientRect():RECT;
    IsContainPoint(pt:POINT,client:boolean):boolean;
    SwndFromPoint(pt:POINT,includeMsgTransparent:boolean):number;
    SetTimer(id:number,elapse:number):boolean;
    KillTimer(id:number):void;
    GetCapture():number;
    SetCapture():number;
    ReleaseCapture():boolean;
    SetAnimation(ani:IAnimation):void;
    StartAnimation(ani:IAnimation):void;
    GetAnimation():IAnimation;
    ClearAnimation():void;
    SetAlpha(alpha:number):void;
    GetAlpha():number;

    //todo, 
    //SetMatrix(mtx:IMatrix):void;
    //GetMatrix(mtx:IMatrix):void;

    RequestRelayout():void;
    UpdateLayout():void;
    UpdateChildrenPosition():void;
    IsLayoutDirty():boolean;
    GetIRoot():IWindow;
    GetIParent():IWindow;
    GetIWindow(flag:number):IWindow;
    GetIChild(idx:number):IWindow;
    GetChildrenCount():number;
    IsDecendant(test:IWindow):boolean;
    SetIOwner(owner:IWindow):void;
    GetIOwner():IWindow;
    BringWindowToTop():void;
    AdjustIZOrder(after:IWindow):void;
    InsertIChild(newChild:IWindow,after:IWindow):void;
    RemoveIChild(child:IWindow):void;
    CreateChildrenFromXml(xml:string):boolean;
    CreateChildrenFromResId(resId:string):boolean;
    FindIChildByID(id:number):IWindow;
    FindIChildByName(name:string):IWindow;
    DestroyIChild(child:IWindow):void;
    DestroyAllChildren():void;
    Destroy():void;
    GetBkgndColor():COLORREF;
    SetWindowText(text:string):void;
    GetWindowText(bRaw:boolean):string;

    SetEventMute(flag:boolean):void;
    SubscribeEvent(evtId:number,slot:IEvtSlot):boolean;
    UnsubscribeEvent(evtId:number,slot:IEvtSlot):boolean;
    FireEvent(evt:IEvtArgs):void;
    FireCommand():boolean;
    FireContextMenu(pt:POINT):boolean;
    GetHostHwnd():number;
    GetContainer():ISwndContainer;
}

export function toIWindow(obj:IObject):IWindow;