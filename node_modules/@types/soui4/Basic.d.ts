import { WORD } from "soui4/Typedef";

export class RECT{
    left:number;
    top:number;
    right:number;
    bottom:number;
}

export class CRect extends RECT{
    /**
     * new CRect from left,top,right and bottom
     * @param left 
     * @param top 
     * @param right 
     * @param bottom 
     */
    constructor(left:number,top:number,right:number,bottom:number);

    /**
     * new CRect from rect
     * @param rc 
     */
    constructor(rc:RECT);

    /**
     * get center point
     */
    CenterPoint():CPoint;

    /**
     * calc width
     */
    Width():number;

    /**
     * calc height
     */
    Height():number;

    /**
     * test whether a point in the rect or not
     * @param pt the tested point
     */
    PtInRect(pt:POINT):boolean;

    /**
     * return if the rect is empty
     */
    IsRectEmpty():boolean;

    /**
     * extend rect by 4 value
     * @param left 
     * @param top 
     * @param right 
     * @param bottom 
     */
    InflateRect(left:number,top:number,right:number,bottom:number):void;

    /**
     * shrink rect by 4 value
     * @param left 
     * @param top 
     * @param right 
     * @param bottom 
     */
    DeflateRect(left:number,top:number,right:number,bottom:number):void;

    /**
     * offset the rect
     * @param x 
     * @param y 
     */
    OffsetRect(x:number,y:number):void;

    /**
     * move the rect to pos keeping size unchanged.
     * @param x 
     * @param y 
     */
    MoveToXY(x:number,y:number):void;

    /**
     * move the rect to x
     * @param x 
     */
    MoveToX(x:number):void;

    /**
     * move the rect to y
     * @param y 
     */
    MoveToY(y:number):void;

    /**
     * let this be the intersection of rc1 and rc2
     * @param rc1 
     * @param rc2 
     */
    IntersectRect(rc1:CRect,rc2:CRect):boolean;

    /**
     * let this be the union of rc1 and rc2
     * @param rc1 
     * @param rc2 
     */
    UnionRect(rc1:CRect,rc2:CRect):boolean;

    /**
     * let this be the subtract of rc1 and rc2
     * @param rc1 
     * @param rc2 
     */
    SubtractRect(rc1:CRect,rc2:CRect):boolean;
}

export class SIZE{
    cx:number;
    cy:number;
}

export class CSize extends SIZE{
    constructor(cx:number,cy:number);
}

export class POINT{
    x:number;
    y:number;
}

export class CPoint extends POINT{
    constructor(x:number,y:number);
}


export class SYSTEMTIME{
    wYear:WORD;
    wMonth:WORD;
    wDayOfWeek:WORD;
    wDay:WORD;
    wHour:WORD;
    wMinute:WORD;
    wSecond:WORD;
    wMilliseconds:WORD;
}


