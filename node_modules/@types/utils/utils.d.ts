import { IStringA } from "soui4";
import { HMOUDLE } from "soui4";
/**
 * 删除一个文件
 * @param name 文件名
 * @param allowUndo true-放回收站
 */
export function DelFile(name:string,allowUndo:boolean):boolean;

/**
 * 删除一个文件夹
 * @param name 文件夹名
 * @param allowUndo true-放回收站
 */
export function DelDir(name:string,allowUndo:boolean):boolean;

/**
 * 计算一个字符串的md5
 * @param buf 字符串
 * @param length 计算长度
 */
export function Md5(buf:string,length:number):string;

/**
 * 计算文件的md5
 * @param path 文件路径
 */
export function FileMd5(path:string):string;

/**
 * 计算文件md5,只计算文件头与文件尾指定长度
 * @param path 文件路径
 * @param maxLen 计算md5数据长度
 */
export function FileMd5Ex(path:string,maxLen:number):string;

/**
 * 在explorer中选择指定文件
 * @param path 文件路径
 */
export function SelectFile(path:string):boolean;

/**
 * 复制文件
 * @param pszFrom 源文件
 * @param pszTo 目标文件
 * @param bReplace 已经存在时替换标志
 */
export function CopyFile(pszFrom:string,pszTo:string,bReplace:boolean):boolean;

/**
 * 复制文件夹
 * @param pszFrom 源文件夹
 * @param pszTo 目标文件夹
 */
export function CopyDir(pszFrom:string,pszTo:string):boolean;

/**
 * base64解码
 * @param src 数据源 
 */
export function Base64Decode(src:string):ArrayBuffer;

/**
 * base64编码
 * @param src  数据源
 * @returns 返回编码字符串
 */
export function Base64Eecode(src:ArrayBuffer):string;

/**
 * url解码
 * @param src url字符串
 * @param len url字符串长度
 */
export function UrlDecode(src:string,len:number):string;


/**
 * url编码
 * @param src url字符串
 * @param len url字符串长度
 */
export function UrlEncode(src:string,len:number):string;

/**
 * 播放wav音频文件
 * @param wavfile 文件路径
 * @param purge 停止正在播放标志
 */
export function PlaySound(wavfile:string,purge:boolean):boolean;

/**
 * get module file name
 * @param hInst module handle
 * @returns module name.
 */
export function GetModuleFileName(hInst:HMOUDLE):string;

/**
 * get env
 * @param env env key
 * @returns env value
 */
export function GetEnv(env:string):string;

/**
 * 将一个utf16的宽字符缓冲区转换为string
 * @param wstrBuf utf16 缓冲区
 * @param codepage 代码页，默认CP_UTF8
 */
export function WString2String(wstrBuf:ArrayBufferLike,codepage:number):ArrayBuffer;

/**
 * 将一个多字节字符缓冲区转换为utf16的宽字符缓冲区
 * @param strBuf 多字节字符缓冲区
 * @param codepage 代码页，默认CP_UTF8
 */
export function String2WString(strBuf:ArrayBufferLike,codepage:number):ArrayBuffer;

/**
 * 将utf8编码的bufferArray转换为string
 * @param strU8Buf tf8编码的bufferArray
 */
export function Buffer2String(strU8Buf:ArrayBufferLike):string;

